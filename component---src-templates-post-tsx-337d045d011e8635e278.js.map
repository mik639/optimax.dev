{"version":3,"sources":["webpack:///./src/components/blog/author/author.tsx","webpack:///./src/components/blog/sideBar/sideBar.tsx","webpack:///./src/templates/post.tsx","webpack:///./src/components/title/title.tsx"],"names":["author_author","_ref","avatar","author","react_default","a","createElement","className","s","wrapAuthor","src","alt","separator","date","sideBar","id","filteredPosts","useBlogPosts","filter","item","slice","map","post","node","frontmatter","_post$node$frontmatte","path","image","title","shortDescription","tags","gatsby_browser_entry","to","wrap","wrapImg","img","text","tags_tags","__webpack_require__","d","__webpack_exports__","query","_data$markdownRemark","data","markdownRemark","html","layouts","SEO","String","wrapHeader","background","name","title_title","isWhite","wrapTitle","wrapTags","size","body","content","dangerouslySetInnerHTML","__html","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","_title_module_scss__WEBPACK_IMPORTED_MODULE_2__","_title_module_scss__WEBPACK_IMPORTED_MODULE_2___default","Title","_className","children","white"],"mappings":"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","file":"component---src-templates-post-tsx-337d045d011e8635e278.js","sourcesContent":["import React from 'react'\n\nimport s from './author.module.scss'\n\ninterface AuthorType {\n  avatar: string\n  author: string\n}\n\nconst Author: React.FC<AuthorType> = ({ avatar, author }: AuthorType): React.ReactElement => (\n  <div className={s.wrapAuthor}>\n    <img className={s.avatar} src={avatar} alt={author} />\n    <span className={s.author}>{author}</span>\n    <i className={s.separator} />\n    <span className={s.date}>Feb 18, 2019</span>\n  </div>\n)\n\nexport default Author\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Tags from 'components/tags/tags'\nimport useBlogPosts from 'hooks/useBlog'\nimport { MarkdownRemarkEdge } from 'types'\n\nimport s from './sideBar.module.scss'\n\ninterface PostType {\n  id: string\n}\n\nconst SideBar: React.FunctionComponent<PostType> = ({ id }: PostType): React.ReactElement => {\n  const posts = useBlogPosts()\n  const filteredPosts = posts.filter((item: MarkdownRemarkEdge): boolean => item.node.id !== id).slice(0, 3)\n\n  return (\n    <div className={s.sideBar}>\n      {filteredPosts.map((post: MarkdownRemarkEdge): React.ReactElement | null => {\n        if (!post || !post.node || !post.node.frontmatter) return null\n\n        const { path, image, title, avatar, author, shortDescription, tags } = post.node.frontmatter\n        return (\n          <Link to={path || ''} className={s.wrap}>\n            <div className={s.wrapImg}>{image && <img className={s.img} src={image} alt={title || ''} />}</div>\n            <span className={s.title}>{title}</span>\n            <div className={s.wrapAuthor}>\n              {avatar && <img className={s.avatar} src={avatar} alt=\"\" />}\n              <span className={s.author}>{author}</span>\n            </div>\n            <p className={s.text}>{shortDescription}</p>\n            <Tags tags={tags || ''} />\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default SideBar\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport SEO from 'components/SEO/SEO'\nimport Layout from 'layouts/index'\nimport WrapHeader from 'components/wrapHeader/wrapHeader'\nimport Background from 'components/background/background'\nimport Title from 'components/title/title'\nimport Tags from 'components/tags/tags'\nimport Author from 'components/blog/author/author'\nimport SideBar from 'components/blog/sideBar/sideBar'\n\nimport { MarkdownRemark } from 'types'\n\nimport s from './post.module.scss'\n\ninterface PostType {\n  data: {\n    markdownRemark: MarkdownRemark\n  }\n}\n\nconst Post: React.FunctionComponent<PostType> = ({ data }: PostType): React.ReactElement => {\n  const { html, id, frontmatter } = data.markdownRemark\n\n  return (\n    <Layout>\n      <SEO title={frontmatter ? String(frontmatter.title) : ''} />\n      <WrapHeader />\n      <Background name=\"job\" img={frontmatter ? frontmatter.image : null}>\n        <Title isWhite>\n          <div className={s.wrapTitle}>{frontmatter ? String(frontmatter.title) : ''}</div>\n          <div className={s.wrapTags}>\n            <Tags tags={frontmatter ? String(frontmatter.tags) : ''} size=\"big\" />\n          </div>\n        </Title>\n        {frontmatter && frontmatter.avatar && frontmatter.author && <Author avatar={frontmatter.avatar} author={frontmatter.author} />}\n      </Background>\n      <div className={s.body}>\n        {html && <div className={s.content} dangerouslySetInnerHTML={{ __html: html }} />}\n        <SideBar id={id} />\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      frontmatter {\n        title\n        path\n        image\n        author\n        avatar\n        shortDescription\n        tags\n      }\n      html\n    }\n  }\n`\n\nexport default Post\n","import React, { ReactNode } from 'react'\nimport className from 'classnames'\n\nimport s from './title.module.scss'\n\ninterface TitleProps {\n  children: ReactNode\n  isWhite?: boolean\n}\n\nconst Title: React.FC<TitleProps> = ({ children, isWhite }: TitleProps): React.ReactElement => (\n  <h2 className={className(s.title, { [s.white]: isWhite })}>{children}</h2>\n)\n\nTitle.defaultProps = {\n  isWhite: false\n}\n\nexport default Title\n"],"sourceRoot":""}