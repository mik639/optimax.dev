{"version":3,"sources":["webpack:///./src/components/job/jobContent/jobContent.tsx","webpack:///./src/components/job/jobApply/jobApply.tsx","webpack:///./src/components/job/jobShare/jobShare.tsx","webpack:///./src/templates/job.tsx","webpack:///./src/components/button/button.tsx","webpack:///./src/components/menu/menu.tsx","webpack:///./src/components/hamburger/hamburger.tsx","webpack:///./src/components/header/header.tsx","webpack:///./src/components/sticky/sticky.tsx","webpack:///./src/components/wrapHeader/wrapHeader.tsx","webpack:///./src/components/background/background.tsx","webpack:///./src/components/title/title.tsx","webpack:///./src/components/background/img/glassesusaD.jpg","webpack:///./src/components/background/img/otticaD.jpg","webpack:///./src/components/background/img/uvpD.jpg","webpack:///./src/components/background/img/job.jpg","webpack:///./src/components/subtitle/subtitle.tsx","webpack:///./src/components/SEO/SEO.tsx","webpack:///./src/hooks/useJobs.tsx"],"names":["jobContent","_ref","children","react_default","a","createElement","className","s","content","dangerouslySetInnerHTML","__html","jobApply","contact","useSiteMetadata","button_button","btn","size","href","email","btnText","jobShare","container","title","socials","item","FacebookShareButton","url","FacebookIcon","round","LinkedinShareButton","LinkedinIcon","TwitterShareButton","TwitterIcon","VKShareButton","VKIcon","__webpack_require__","d","__webpack_exports__","query","_data$markdownRemark","data","markdownRemark","id","html","frontmatter","jobs","useJobs","layouts","SEO","String","wrapHeader","background","name","isWhite","wrapTitle","subtitle","wrapSubtitle","wrapMarker","baseIcon","width","height","wrapAddress","address","sidebar","wrapJobs","map","_ref2","_ref2$node","node","itemId","gatsby_browser_entry","key","to","path","wrap","body","jobTitle","jobAddress","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","_button_module_scss__WEBPACK_IMPORTED_MODULE_2__","_button_module_scss__WEBPACK_IMPORTED_MODULE_2___default","_classNames2","_classNames","_ref$color","color","_ref$onClick","onClick","_ref$isDisabled","isDisabled","_ref$className","_ref$type","type","_ref$isShadow","isShadow","_ref$size","_ref$href","colorClassName","classNames","shadow","disabled","Menu","isOpen","isFixed","_useSiteMetadata","menuLinks","colors","open","fixed","list","link","menuLink","icon","menu","hamburger","state","closeMenu","_this","widthWindow","window","setState","changeVisibilityMenu","componentDidMount","this","componentWillUnmount","render","_classNames3","isBlack","props","white","black","role","tabIndex","wrapHamburger","onKeyDown","inner","Component","header","leftBox","wrapLogo","rightBox","wrapLanguage","Sticky","topRect","wrapRef","React","calcHeight","element","current","pageYOffset","onSticky","_this$props","topOffset","winScroll","scrollFrom","ref","defaultProps","sticky","WrapHeader","isHome","IMAGES_MAP","glassesusa","_img_glassesusaD_jpg__WEBPACK_IMPORTED_MODULE_2___default","ottica","_img_otticaD_jpg__WEBPACK_IMPORTED_MODULE_3___default","uvp","_img_uvpD_jpg__WEBPACK_IMPORTED_MODULE_4___default","job","image","img","console","react__WEBPACK_IMPORTED_MODULE_1___default","wrapImg","src","alt","_title_module_scss__WEBPACK_IMPORTED_MODULE_2__","_title_module_scss__WEBPACK_IMPORTED_MODULE_2___default","Title","_className","module","exports","p","_subtitle_module_scss__WEBPACK_IMPORTED_MODULE_2__","_subtitle_module_scss__WEBPACK_IMPORTED_MODULE_2___default","Subtitle","lang","meta","keywords","_public_static_d_837190331_json__WEBPACK_IMPORTED_MODULE_0__","allMarkdownRemark","edges"],"mappings":"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","file":"component---src-templates-job-tsx-05e986b0ae5378ee1de4.js","sourcesContent":["import React from 'react'\n\nimport s from './jobContent.module.scss'\n\ninterface JobContentProps {\n  children: string\n}\n\nconst JobContent: React.FC<JobContentProps> = ({ children }: JobContentProps): React.ReactElement => {\n  return <div className={s.content} dangerouslySetInnerHTML={{ __html: children }} />\n}\n\nexport default JobContent\n","import React from 'react'\n\nimport Button from 'components/button/button'\nimport useSiteMetadata from 'hooks/useSiteMetaData'\n\nimport s from './jobApply.module.scss'\n\nconst JobApply: React.FC = (): React.ReactElement => {\n  const { contact } = useSiteMetadata()\n  return (\n    <Button className={s.btn} size=\"big\" href={`mailto:${contact ? contact.email : ''}`}>\n      <span className={s.btnText}>Apply For This Job</span>\n    </Button>\n  )\n}\n\nexport default JobApply\n","import React from 'react'\nimport {\n  FacebookShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  VKShareButton,\n  FacebookIcon,\n  LinkedinIcon,\n  TwitterIcon,\n  VKIcon\n} from 'react-share'\n\nimport s from './jobShare.module.scss'\n\nconst JobShare: React.FC = (): React.ReactElement => {\n  return (\n    <div className={s.container}>\n      <p className={s.title}>Share This Job Opening</p>\n      <div className={s.socials}>\n        <div className={s.item}>\n          <FacebookShareButton url=\"/\">\n            <FacebookIcon size={32} round />\n          </FacebookShareButton>\n        </div>\n        <div className={s.item}>\n          <LinkedinShareButton url=\"/\">\n            <LinkedinIcon size={32} round />\n          </LinkedinShareButton>\n        </div>\n        <div className={s.item}>\n          <TwitterShareButton url=\"/\">\n            <TwitterIcon size={32} round />\n          </TwitterShareButton>\n        </div>\n        <div className={s.item}>\n          <VKShareButton url=\"/\">\n            <VKIcon size={32} round />\n          </VKShareButton>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default JobShare\n","import React, { ReactNode } from 'react'\nimport { graphql, Link } from 'gatsby'\n\nimport SEO from 'components/SEO/SEO'\nimport Layout from 'layouts/index'\nimport useJobs from 'hooks/useJobs'\nimport BaseIcon from 'components/baseIcon/baseIcon'\nimport WrapHeader from 'components/wrapHeader/wrapHeader'\nimport Background from 'components/background/background'\nimport JobContent from 'components/job/jobContent/jobContent'\nimport JobApply from 'components/job/jobApply/jobApply'\nimport JobShare from 'components/job/jobShare/jobShare'\nimport Title from 'components/title/title'\nimport SubTitle from 'components/subtitle/subtitle'\nimport Button from 'components/button/button'\nimport { MarkdownRemark, MarkdownRemarkEdge } from 'types'\n\nimport s from './job.module.scss'\n\ninterface JobType {\n  data: {\n    markdownRemark: MarkdownRemark\n  }\n}\n\nconst Job = ({ data }: JobType): ReactNode => {\n  const { id, html, frontmatter } = data.markdownRemark\n\n  const jobs = useJobs()\n\n  return (\n    <Layout>\n      <SEO title={frontmatter ? String(frontmatter.title) : ''} />\n      <WrapHeader />\n      <Background name=\"job\">\n        <Title isWhite>\n          <div className={s.wrapTitle}>{frontmatter ? frontmatter.title : ''}</div>\n        </Title>\n        <SubTitle isWhite>\n          <div className={s.wrapSubtitle}>\n            <div className={s.wrapMarker}>\n              <BaseIcon width=\"8px\" height=\"12px\" name=\"marker\" />\n            </div>\n            <span className={s.wrapAddress}>{frontmatter ? frontmatter.address : ''}</span>\n          </div>\n        </SubTitle>\n      </Background>\n      <div className={s.container}>\n        <div className={s.content}>\n          <h1 className={s.title}>{frontmatter ? frontmatter.title : ''}</h1>\n          <h2 className={s.subtitle}>Job Description</h2>\n          <JobContent>{html || ''}</JobContent>\n        </div>\n        <div className={s.sidebar}>\n          <JobApply />\n          <JobShare />\n        </div>\n      </div>\n\n      <div className={s.wrapJobs}>\n        {jobs.map(\n          ({ node: { id: itemId, frontmatter: item } }: MarkdownRemarkEdge): ReactNode => {\n            if (itemId === id || !item) return null\n\n            return (\n              <Link key={itemId} to={String(item.path)} className={s.wrap}>\n                <div className={s.body}>\n                  <span className={s.jobTitle}>{item.title}</span>\n                  <span className={s.jobAddress}>{item.address}</span>\n                </div>\n                <Button className={s.btn}>\n                  <span className={s.btnText}>View Job</span>\n                </Button>\n              </Link>\n            )\n          }\n        )}\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      frontmatter {\n        title\n        path\n        address\n      }\n      html\n    }\n  }\n`\n\nexport default Job\n","import React, { ReactNode } from 'react'\nimport classNames from 'classnames'\n\nimport s from './button.module.scss'\n\ninterface ButtonProps {\n  children: ReactNode\n  onClick?: (event: React.MouseEvent<HTMLButtonElement | HTMLAnchorElement, MouseEvent>) => void\n  color?: 'blue' | 'white'\n  type?: 'button' | 'reset' | 'submit'\n  size?: 'small' | 'big'\n  isShadow?: boolean\n  className?: string\n  isDisabled?: boolean\n  href?: string\n}\n\n/**\n * Button which must be used at whole of the GlassesUsa\n */\nconst Button: React.FC<ButtonProps> = ({\n  color = 'blue',\n  onClick = () => {},\n  children,\n  isDisabled = false,\n  className = '',\n  type = 'button',\n  isShadow = false,\n  size = 'small',\n  href = ''\n}: ButtonProps): React.ReactElement => {\n  const colorClassName: string = s[color]\n\n  if (href) {\n    return (\n      <a\n        className={classNames(s.btn, colorClassName, s[size], className, {\n          [s.shadow]: isShadow\n        })}\n        onClick={onClick}\n        href={href}\n      >\n        {children}\n      </a>\n    )\n  }\n\n  return (\n    /**\n     * https://github.com/microsoft/TypeScript/issues/31247\n     */\n    // eslint-disable-next-line react/button-has-type\n    <button\n      disabled={isDisabled}\n      type={type}\n      onClick={onClick}\n      className={classNames(s.btn, colorClassName, s[size], className, { [s.shadow]: isShadow })}\n    >\n      {children}\n    </button>\n  )\n}\nexport default Button\n","import React from 'react'\nimport classNames from 'classnames'\n\nimport useSiteMetadata from 'hooks/useSiteMetaData'\nimport MenuLink from 'components/menuLink/menuLink'\nimport Button from 'components/button/button'\n\nimport { Maybe, SiteSiteMetadataMenuLinks } from 'types'\n\nimport s from './menu.module.scss'\n\ninterface MenuProps {\n  isOpen?: boolean\n  isFixed?: boolean\n}\n\nconst Menu: React.FC<MenuProps> = ({ isOpen, isFixed }: MenuProps): React.ReactElement => {\n  const { menuLinks, contact } = useSiteMetadata()\n\n  const colors = isFixed ? ['black'] : ['white', 'black']\n\n  return (\n    <div className={classNames(s.wrap, { [s.open]: isOpen }, { [s.fixed]: isFixed })}>\n      <nav className={s.list}>\n        {menuLinks &&\n          menuLinks.map((item: Maybe<SiteSiteMetadataMenuLinks>): React.ReactElement | null => {\n            if (!item || !item.name) return null\n            if (item.link) {\n              return <MenuLink key={item.name} color={colors} name={item.name} icon={String(item.icon)} link={item.link} />\n            }\n            return <MenuLink key={item.name} color={colors} name={item.name} icon={String(item.icon)} />\n          })}\n        <Button className={s.btn} size=\"big\" href={`mailto:${contact ? contact.email : ''}`}>\n          <span className={s.btnText}>Apply</span>\n        </Button>\n      </nav>\n    </div>\n  )\n}\n\nMenu.defaultProps = {\n  isFixed: false,\n  isOpen: false\n}\n\nexport default Menu\n","import React, { Component, ReactNode } from 'react'\nimport classNames from 'classnames'\n\nimport Menu from 'components/menu/menu'\n\nimport s from './hamburger.module.scss'\n\ninterface HamburgerStateType {\n  isOpen: boolean\n}\n\ninterface HamburgerPropsType {\n  isBlack: boolean\n}\n\nclass Hamburger extends Component<HamburgerPropsType, HamburgerStateType> {\n  state = {\n    isOpen: false\n  }\n\n  /**\n   * Called after component was mounted\n   */\n  componentDidMount() {\n    window.addEventListener('scroll', this.closeMenu)\n  }\n\n  /**\n   * Called before component will unmounted\n   */\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.closeMenu)\n  }\n\n  /**\n   * Close menu when user scrolling\n   */\n  closeMenu = () => {\n    const { isOpen } = this.state\n    const widthWindow = window.innerWidth || 0\n    const mediaPoint = 1024\n\n    if (widthWindow !== 0 && widthWindow < mediaPoint && isOpen) {\n      this.setState({ isOpen: false })\n    }\n  }\n\n  /**\n   * Change visability menu\n   */\n  changeVisibilityMenu = () => {\n    this.setState(({ isOpen }) => ({ isOpen: !isOpen }))\n  }\n\n  render(): ReactNode {\n    const { isOpen } = this.state\n    const { isBlack } = this.props\n\n    return (\n      <div className={classNames(s.wrap, { [s.white]: !isBlack }, { [s.black]: isBlack })}>\n        <div\n          role=\"button\"\n          tabIndex={0}\n          className={classNames(s.wrapHamburger, { [s.open]: isOpen })}\n          onClick={this.changeVisibilityMenu}\n          onKeyDown={this.changeVisibilityMenu}\n        >\n          <div className={s.inner} />\n        </div>\n        <Menu isOpen={isOpen} />\n      </div>\n    )\n  }\n}\n\nexport default Hamburger\n","import React from 'react'\nimport classNames from 'classnames'\nimport { Link } from 'gatsby'\n\nimport useSiteMetadata from 'hooks/useSiteMetaData'\nimport BaseIcon from 'components/baseIcon/baseIcon'\nimport Button from 'components/button/button'\nimport Hamburger from 'components/hamburger/hamburger'\nimport Menu from 'components/menu/menu'\n\nimport s from './header.module.scss'\n\ninterface HeaderProps {\n  isFixed: boolean\n}\nconst Header: React.FC<HeaderProps> = ({ isFixed }: HeaderProps): React.ReactElement => {\n  const { contact } = useSiteMetadata()\n  return (\n    <div className={classNames({ [s.fixed]: isFixed })}>\n      <div className={s.wrap}>\n        <div className={s.leftBox}>\n          <Link to=\"/\" className={s.wrapLogo}>\n            <BaseIcon name=\"optimax\" />\n          </Link>\n          <Menu isFixed={isFixed} />\n        </div>\n        <div className={s.rightBox}>\n          <div className={s.wrapLanguage}>\n            <BaseIcon name=\"language\" />\n          </div>\n          <Button className={s.btn} color={isFixed ? 'blue' : 'white'} href={`mailto:${contact ? contact.email : ''}`}>\n            <span className={s.btnText}>Apply</span>\n          </Button>\n        </div>\n        <Hamburger isBlack={isFixed} />\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","import React, { Component, ReactNode } from 'react'\nimport classNames from 'classnames'\n\nimport s from './sticky.module.scss'\n\ninterface StickyProps {\n  children: ReactNode\n  isFixed: (isFixed: boolean) => void\n  topOffset: number\n}\n\nclass Sticky extends Component<StickyProps> {\n  state = {\n    topRect: 0,\n    isFixed: false\n  }\n\n  static defaultProps = {\n    topOffset: 0\n  }\n\n  private wrapRef = React.createRef<HTMLDivElement>()\n\n  /**\n   * Called after component was mounted for the first time\n   */\n  componentDidMount() {\n    window.addEventListener('scroll', this.onSticky)\n    // this.calcHeight();\n  }\n\n  /**\n   * Method is invoked immediately before a component is unmounted and destroyed.\n   */\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.onSticky)\n  }\n\n  /**\n   * Calc height\n   */\n  calcHeight = () => {\n    const element = this.wrapRef.current\n    this.setState(\n      {\n        topRect: element ? element.getBoundingClientRect().top + window.pageYOffset : 0\n      },\n      this.onSticky\n    )\n  }\n\n  onSticky = () => {\n    const { topRect } = this.state\n    const { topOffset, isFixed } = this.props\n\n    const winScroll = window.pageYOffset\n\n    const scrollFrom = topRect + topOffset\n\n    if (winScroll <= scrollFrom) {\n      this.setState({\n        isFixed: false\n      })\n      isFixed(false)\n    } else if (winScroll >= scrollFrom) {\n      this.setState({\n        isFixed: true\n      })\n      isFixed(true)\n    }\n  }\n\n  render(): ReactNode {\n    const { children } = this.props\n    const { isFixed } = this.state\n\n    return (\n      <div className={classNames(s.wrap, { [s.fixed]: isFixed })} ref={this.wrapRef}>\n        {children}\n      </div>\n    )\n  }\n}\n\nexport default Sticky\n","import React, { Component, ReactNode } from 'react'\n\nimport Header from 'components/header/header'\nimport Sticky from 'components/sticky/sticky'\n\nimport s from './wrapHeader.module.scss'\n\ninterface WrapHeaderProps {\n  isHome?: boolean\n}\n\nclass WrapHeader extends Component<WrapHeaderProps> {\n  state = {\n    isFixed: false\n  }\n\n  static defaultProps = {\n    isHome: false\n  }\n\n  /**\n   * is fixed header\n   */\n  isFixed = (isFixed: boolean): void => {\n    this.setState({ isFixed })\n  }\n\n  render(): ReactNode {\n    const { isFixed } = this.state\n    const { isHome } = this.props\n\n    if (isHome) {\n      return (\n        <Sticky isFixed={this.isFixed}>\n          <Header isFixed={isFixed} />\n        </Sticky>\n      )\n    }\n\n    return (\n      <div className={s.wrap}>\n        <div className={s.sticky}>\n          <Header isFixed />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default WrapHeader\n","import React, { ReactNode } from 'react'\n\nimport glassesusa from './img/glassesusaD.jpg'\nimport ottica from './img/otticaD.jpg'\nimport uvp from './img/uvpD.jpg'\nimport job from './img/job.jpg'\n\nimport s from './background.module.scss'\n\ninterface BackgroundProps {\n  name: string\n  children?: ReactNode\n  img?: string | null\n}\n\ninterface ImagesType {\n  [s: string]: string\n}\n\nconst IMAGES_MAP: ImagesType = {\n  glassesusa,\n  ottica,\n  uvp,\n  job\n}\n\nconst Background: React.FC<BackgroundProps> = ({ name, children, img }: BackgroundProps): React.ReactElement | null => {\n  const image = img || IMAGES_MAP[name]\n\n  if (typeof image === 'undefined') {\n    // eslint-disable-next-line no-console\n    console.error('Requested icon does not exist', name)\n    return null\n  }\n\n  return (\n    <div className={s.wrap}>\n      <div className={s.inner}>\n        {children && <div className={s.content}>{children}</div>}\n        <div className={s.wrapImg}>\n          <img className={s.img} src={image} alt=\"\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Background\n","import React, { ReactNode } from 'react'\nimport className from 'classnames'\n\nimport s from './title.module.scss'\n\ninterface TitleProps {\n  children: ReactNode\n  isWhite?: boolean\n}\n\nconst Title: React.FC<TitleProps> = ({ children, isWhite }: TitleProps): React.ReactElement => (\n  <h2 className={className(s.title, { [s.white]: isWhite })}>{children}</h2>\n)\n\nTitle.defaultProps = {\n  isWhite: false\n}\n\nexport default Title\n","module.exports = __webpack_public_path__ + \"static/glassesusaD-df87da52bd1aac9956ef0bb205d92854.jpg\";","module.exports = __webpack_public_path__ + \"static/otticaD-db12817567b79be72a8656a8a56d46b4.jpg\";","module.exports = __webpack_public_path__ + \"static/uvpD-9bcdf3f21886040ca3103b6c6f65abc3.jpg\";","module.exports = __webpack_public_path__ + \"static/job-3b2255e609e68a0b82c2cb7d9e303f4f.jpg\";","import React, { ReactNode } from 'react'\nimport className from 'classnames'\n\nimport s from './subtitle.module.scss'\n\ninterface SubtitleProps {\n  children: ReactNode\n  isWhite?: boolean\n}\n\nconst Subtitle: React.FC<SubtitleProps> = ({ children, isWhite }: SubtitleProps): React.ReactElement => (\n  <h2 className={className(s.subtitle, { [s.white]: isWhite })}>{children}</h2>\n)\n\nSubtitle.defaultProps = {\n  isWhite: false\n}\n\nexport default Subtitle\n","import React from 'react'\n// import Helmet from 'react-helmet'\n\n// import favicon from 'static/favicon.png'\n// import useSiteMetadata from 'hooks/useSiteMetaData'\n\ninterface SEOProps {\n  title: string\n  lang?: string\n  meta?: string[]\n  keywords?: string[]\n}\n\n// const SEO: React.SFC<SEOProps> = (props: SEOProps): React.ReactElement => {\nconst SEO: React.SFC<SEOProps> = (): React.ReactElement | null => {\n  return null\n  // const siteMetadata = useSiteMetadata()\n  // const title = props.title || siteMetadata.title\n  // return (\n  //   <Helmet\n  //     htmlAttributes={{\n  //       lang: 'en'\n  //     }}\n  //     title={title}\n  //     titleTemplate={`%s - ${siteMetadata.title}`}\n  //     link={[{ rel: 'shortcut icon', type: 'image/png', href: `${favicon}` }]}\n  //   />\n  // )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: []\n}\n\nexport default SEO\n","import { useStaticQuery, graphql } from 'gatsby'\n\nimport { MarkdownRemarkEdge } from 'types'\n\nconst useJobs = (): MarkdownRemarkEdge[] => {\n  const { allMarkdownRemark } = useStaticQuery(\n    graphql`\n      query JobsQuery {\n        allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/jobs/\" } }, sort: { fields: [frontmatter___date], order: DESC }) {\n          edges {\n            node {\n              excerpt\n              id\n              frontmatter {\n                title\n                address\n                date\n                path\n                shortDescription\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n  return allMarkdownRemark.edges\n}\n\nexport default useJobs\n"],"sourceRoot":""}